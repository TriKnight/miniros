<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="miniros">

  <!-- Defining skid-steer controller parameters. --> 
  <xacro:property name="wheel_mu1"        value="0.16"      />
  <xacro:property name="wheel_mu2"        value="0.16"      />
  <xacro:property name="wheel_kp"         value="10000000.0" />
  <xacro:property name="wheel_kd"         value="1.0"        />
  <xacro:property name="wheel_torque"     value="10.0"       />
  <xacro:property name="wheel_separation" value="0.324"      />
  <xacro:property name="wheel_diameter"   value="0.130"      />   

  <!-- Defining macros. -->
  <xacro:macro name="wheel" params="prefix">
    <gazebo reference="${prefix}_wheel_link">
      <material>Gazebo/FlatBlack</material>
      <mu1>${wheel_mu1}</mu1>
      <mu2>${wheel_mu2}</mu2>
      <kp>${wheel_kp}</kp>
      <kd>${wheel_kd}</kd>
    </gazebo>  
  </xacro:macro>

  <!-- Defining link materials. -->
  <gazebo reference="base_link">
      <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="top_link">
      <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="l_antenna_link">
      <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="r_antenna_link">
      <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="housing_link">
      <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="battery_link">
      <material>Gazebo/FlatBlack</material>
  </gazebo>
<gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <leftJoint>lf_wheel_joint</leftJoint>
      <rightJoint>rf_wheel_joint</rightJoint>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.13</wheelDiameter>
      <torque>1000</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelJointState>true</publishWheelJointState>
      <publishWheelTF>true</publishWheelTF>
    </plugin>
  </gazebo>
 <!-- Defining the skid-steer controller plugin. -->
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>50.0</updateRate>
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <robotNamespace></robotNamespace>
      <leftFrontJoint>lf_wheel_joint</leftFrontJoint>
      <rightFrontJoint>rf_wheel_joint</rightFrontJoint>
      <leftRearJoint>lb_wheel_joint</leftRearJoint>
      <rightRearJoint>rb_wheel_joint</rightRearJoint>
      <wheelSeparation>${wheel_separation}</wheelSeparation>
      <wheelDiameter>${wheel_diameter}</wheelDiameter>
      
      <torque>${wheel_torque}</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <broadcastTF>50</broadcastTF>
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>
  <!-- Building from macros. -->
  <xacro:wheel prefix="lf" />
  <xacro:wheel prefix="lb" />
  <xacro:wheel prefix="rf" />
  <xacro:wheel prefix="rb" />
    <!-- Arguments -->
    <xacro:arg name="camera_name"   default="zed" />
    <xacro:arg name="camera_model"  default="zed" />
    <xacro:arg name="cam_pos_x"     default="0.0" />
    <xacro:arg name="cam_pos_y"     default="0.0" />
    <xacro:arg name="cam_pos_z"     default="0.0" />
    <xacro:arg name="cam_roll"      default="0.0" />
    <xacro:arg name="cam_pitch"     default="0.0" />
    <xacro:arg name="cam_yaw"       default="0.0" />

    <!-- Properties -->
    <xacro:property name="M_PI"     value="3.1415926535897931" />
    <xacro:property name="model"    value="$(arg camera_model)" />

    <xacro:if value="${model == 'zed'}">
        <xacro:property name="baseline" value="0.12" />
    </xacro:if>
    <xacro:if value="${model == 'zedm'}">
        <xacro:property name="baseline" value="0.06" />
    </xacro:if>
    <xacro:if value="${model == 'zed2'}">
        <xacro:property name="baseline" value="0.12" />
    </xacro:if>


 


  <gazebo reference="$(arg camera_name)_camera_center">
    <material>Gazebo/Green</material>
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>zed/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>$(arg camera_name)_camera_center</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- hokuyo -->
  <gazebo reference="hokuyo">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.0944</min_angle>
            <max_angle>2.0944</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.25</min>
          <max>8.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>
